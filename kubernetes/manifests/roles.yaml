apiVersion: v1
kind: ServiceAccount
metadata:
  name: user
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: user-role-binding
  namespace: default
subjects:
- kind: User
  name: "user"
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: "view"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: linkerd
  name: linkerd-secret-access
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["linkerd-trust-anchor"]
  verbs: ["get", "list", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-secret-access-binding
  namespace: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-identity  # Replace with the name of the service account you want to grant access
  namespace: linkerd  # The namespace where the service account exists
roleRef:
  kind: Role
  name: linkerd-secret-access
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-cert-manager-secret-access-binding
  namespace: linkerd
subjects:
- kind: ServiceAccount
  name: cert-manager
  namespace: cert-manager 
roleRef:
  kind: Role
  name: linkerd-cert-manager-secret-access
  apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: linkerd-secret-access-binding
#   namespace: linkerd
# subjects:
# - kind: User
#   name: "cluster-1"  # Replace with the actual user name
# roleRef:
#   kind: Role
#   name: linkerd-secret-access
#   apiGroup: rbac.authorization.k8s.io